version: '3'
services:
    pgdb:
      image: postgres:13
      container_name: pgdb
      volumes:
        - pgdbdata:/var/lib/postgresql/data/
        - ./movies_admin/pgdb/dump.sql:/docker-entrypoint-initdb.d/movies_schema_dump.sql
      env_file:
        - ../movies_admin/config/.env
      expose:
        - "5432"
      restart: always


    django_proj:
      build: ../movies_admin
      container_name: django_proj
      volumes:
        - static_volume:/movies_admin/static
        - media_volume:/movies_admin/media
      expose:
        - "8000"
      links:
        - "pgdb:database"
      depends_on:
        - pgdb
      env_file:
        - ../movies_admin/config/.env
      restart: always



    nginx:
      image: nginx-django
      volumes:
        - ./movies_admin/src/configs/site.conf:/etc/nginx/conf.d/site.conf:ro
        - ./movies_admin/src/nginx.conf:/etc/nginx/nginx.conf:ro
        -  static_volume:/var/www/static/
        -  media_volume:/var/www/media/
      ports:
        - "8123:80"
      depends_on:
        - django_proj


    elastic:
      image: ghcr.io/yp-middle-python-24/elasticsearch:8.7.0
      container_name: elastic
      environment:
        - discovery.type=single-node
        - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
      volumes:
        - esdata:/usr/share/elasticsearch/data
      ports:
        - 9200:9200

    etl:
        container_name: etl
        env_file:
          - .env
        build:
          context: ./postgres_to_es
        depends_on:
          - elastic
          - postgres
        restart: unless-stopped




volumes:
  pgdbdata:
  static_volume:
  media_volume:
